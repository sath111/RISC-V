$date
	Sat Apr 05 11:50:26 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module REGISTERFILE_tb $end
$var wire 32 ! rdata2 [31:0] $end
$var wire 32 " rdata1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ raddr1 [4:0] $end
$var reg 5 % raddr2 [4:0] $end
$var reg 1 & rst_n $end
$var reg 5 ' waddr [4:0] $end
$var reg 32 ( wdata [31:0] $end
$var reg 1 ) wen $end
$scope module dut $end
$var wire 1 # clk $end
$var wire 5 * raddr1 [4:0] $end
$var wire 5 + raddr2 [4:0] $end
$var wire 32 , rdata1 [31:0] $end
$var wire 32 - rdata2 [31:0] $end
$var wire 1 & rst_n $end
$var wire 5 . waddr [4:0] $end
$var wire 32 / wdata [31:0] $end
$var wire 1 ) wen $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 0
b0 /
b0 .
bx -
bx ,
b0 +
b0 *
0)
b0 (
b0 '
1&
b0 %
b0 $
0#
bx "
bx !
$end
#5
1#
#10
b0 "
b0 ,
b0 !
b0 -
b100000 0
0#
0&
#15
b100000 0
1#
#20
0#
1&
#25
1#
#30
0#
b1010 (
b1010 /
b1 '
b1 .
1)
#35
1#
#40
0#
b10100 (
b10100 /
b10 '
b10 .
#45
1#
#50
0#
b101000 (
b101000 /
b10100 '
b10100 .
#55
1#
#60
0#
0)
#65
1#
#70
0#
b10100 !
b10100 -
b10 %
b10 +
b1010 "
b1010 ,
b1 $
b1 *
#75
1#
#80
0#
b101000 "
b101000 ,
b10100 $
b10100 *
#85
1#
#90
0#
